version: '3.7'

volumes:
  kong_data: {}

networks:
  kong-net:  # Use the same network for all services

services:

  wiremock:
    container_name: gateway_wiremock
    image: wiremock/wiremock:2.32.0-1-alpine
    volumes:
      - .wiremock/wiremock-01:/home/wiremock/mappings
    ports:
      - 9090:8080

  kong-database:
    image: postgres:9.6
    container_name: kong-postgres
    restart: on-failure
    networks:
      - kong-net  # Use kong-net
    volumes:
      - kong_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: kong
      POSTGRES_PASSWORD: kong
      POSTGRES_DB: kong
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "kong"]
      interval: 30s
      timeout: 30s
      retries: 3

  kong-migration:
    image: kong:latest
    command: kong migrations bootstrap
    networks:
      - kong-net  # Use kong-net
    restart: on-failure
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
    depends_on:
      - kong-database

  kong:
    build: .
    user: kong
    networks:
      - kong-net  # Use kong-net
    ports:
      - 9000:8000
      - 443:8443
      - 127.0.0.1:8001:8001
    healthcheck:
      test: [ "CMD", "kong", "health" ]
      interval: 5s
      timeout: 2s
      retries: 15
    container_name: gateway_kong
    restart: always
    command: [ "kong", "docker-start", "--v" ]
    environment:
      KONG_DATABASE: postgres
      KONG_PG_HOST: kong-database
      KONG_PG_DATABASE: kong
      KONG_PG_USER: kong
      KONG_PG_PASSWORD: kong
      KONG_ADMIN_LISTEN: 0.0.0.0:8001
      KONG_PROXY_LISTEN: 0.0.0.0:8000, 0.0.0.0:8443 ssl http2
      KONG_NGINX_HTTP_RESOLVER: 8.8.8.8
      KONG_PROXY_ERROR_LOG: /dev/stderr
      KONG_ADMIN_ERROR_LOG: /dev/stderr
      KONG_NGINX_HTTP_CLIENT_BODY_BUFFER_SIZE: 1m
      KONG_CLIENT_BODY_BUFFER_SIZE: 1m
      KONG_CLIENT_MAX_BODY_SIZE: 10m
      KONG_NGINX_HTTP_CLIENT_MAX_BODY_SIZE: 10m

  # konga-prepare:
  #   image: pantsel/konga:latest
  #   command: "-c prepare -a postgres -u postgresql://kong:kong@kong-database:5433/konga"
  #   networks:
  #     - kong-net  # Use kong-net
  #   restart: on-failure
  #   depends_on:
  #     - kong-database

  # konga:
  #   image: pantsel/konga:latest
  #   restart: always
  #   networks:
  #       - kong-net  # Use kong-net
  #   environment:
  #     DB_ADAPTER: postgres
  #     DB_URI: postgresql://kong:kong@kong-database:5432/konga
  #     NODE_ENV: production
  #   depends_on:
  #     - kong-database
  #   ports:
  #     - "1337:1337"
